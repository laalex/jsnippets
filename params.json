{"name":"Jsnippets","tagline":"AJAX html snippets builder","body":"jSnippets\r\n--------------------\r\n*V 0.0.1*-alpha\r\n\r\n--------------------\r\n\r\njSnippets is a javasript library that grabs an HTML file that contains different HTML code snippets and allows you to use the snippet element to be appended,prepended or to replace the contents of a given DIV element from the DOM of the current file.\r\n\r\nRequirements\r\n============\r\n1. `jQuery`\r\n2. `Bootstrap`\r\n\r\nSnippets declaration\r\n====================\r\nSnippets should be declared in the following form\r\n<!--snippet#id_here--> html <!--snippet#id_here_end-->\r\nAlso, the snippets HTML should be ALWAYS defined within a *<span />* element to avoid multiple elements selection problem so that jquery _.find()_ function can find the targeted divs by their data attribute\r\n\r\nApplication\r\n===========\r\njSnippets grabs the _html code snippets_ and uses the data attribute to set different things for the snippet.\r\nThere are, some *reserved* data attributes. They are the following:\r\n\r\n1. _data-iterator_ ~ Represents an element that has child elements that will be iterated within a $.each structure there is only 1 iterator field allowed by now\r\n\r\nMethods\r\n=======\r\n1. `jsnippets.init(path);`\r\nThis function is getting the path argument which represents the path to the snippets HTML file. This loads all the snippets within an property of _jsnippets_ object. \r\n2. `jsnippets.load(snippet_id);` \r\nThis represents the snippet ID to load from the file. This will be loaded as the current object to work with within the following methods.\r\n3. `jsnippets.unload();` \r\nUnloads the current working snippet from the memory.\r\n4. `jsnippets.dataload(object);`\r\nThis receives an object representing the data to be bound to the snippet. Example of an object can be:\r\n`{iterator:[{name:'alex',field:'test'},{name:'alex',field:'test'},{name:'alex',field:'test'},{name:'alex',field:'test'}],othername:'alex'}`\r\n5. `jsnippets.appendTo(div);jsnippets.prependTo(div);jsnippets.replace(div);`\r\nThose methods append,prepend, or replace the content of a #div/.div/DOM element with the current loaded snippet. Also, after the snippet is appended/prepended/replaced the library calls jsnippet.unload(); to clear the memory;\r\n\r\nCurrent features\r\n================\r\n1. If `<img data-attr/>` tag is found within the snippet, jSnippets expects to have an URL of the image to build the image.\r\n\r\n\r\nTO DO\r\n=====\r\n1. If `<a>` tag is found, jsnippet should expect an object that will have the URL as a key, and TEXT as another key to properly set the `<a>` element. \r\n2. Add multiple iterators to snippets or allow the iterator to be defined in another way. \r\n","google":"UA-49849814-1","note":"Don't delete this file! It's used internally to help with page regeneration."}